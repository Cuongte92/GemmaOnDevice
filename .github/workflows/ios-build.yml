name: iOS Build

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:

jobs:
  ios:
    runs-on: macos-14

    env:
      CONFIGURATION: Release
      ARCHIVE_PATH: ${{ github.workspace }}/build/App.xcarchive
      EXPORT_PATH:  ${{ github.workspace }}/build/ipa
      KEYCHAIN: build.keychain

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Xcode version
        run: xcodebuild -version

      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods --no-document
          pod install --project-directory=mediapipe-samples/examples/llm_inference/ios

      - name: Pod install (if Podfile exists)
        run: |
          if [ -f Podfile ]; then
            pod install
          fi

      - name: Decode signing files
        run: |
          echo "${{ secrets.CERTIFICATE_P12 }}" | base64 --decode > certificate.p12
          echo "${{ secrets.PROVISIONING_PROFILE }}" | base64 --decode > profile.mobileprovision

      - name: Setup keychain
        run: |
          security create-keychain -p "" $KEYCHAIN
          security import certificate.p12 -k $KEYCHAIN -P "${{ secrets.P12_PASSWORD }}" -T /usr/bin/codesign
          security list-keychains -s $KEYCHAIN
          security unlock-keychain -p "" $KEYCHAIN

      - name: Install provisioning profile
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/

      - name: Archive
        run: |
          xcodebuild clean archive \
            -workspace mediapipe-samples/examples/llm_inference/ios/LLMInferenceExample.xcworkspace \
            -scheme LLMInferenceExample \
            -configuration $CONFIGURATION \
            -archivePath $ARCHIVE_PATH \
            CODE_SIGN_STYLE=Manual \
            DEVELOPMENT_TEAM=${{ secrets.TEAM_ID }} \
            PROVISIONING_PROFILE_SPECIFIER="" \
            CODE_SIGN_IDENTITY="Apple Distribution"

      - name: Create export options
        run: |
          cat <<PLIST > ExportOptions.plist
          {
            "method": "ad-hoc",
            "signingStyle": "manual",
            "teamID": "${{ secrets.TEAM_ID }}"
          }
          PLIST

      - name: Export IPA
        run: |
          xcodebuild -exportArchive \
            -archivePath $ARCHIVE_PATH \
            -exportOptionsPlist ExportOptions.plist \
            -exportPath $EXPORT_PATH

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: GemmaOnDevice-ipa
          path: ${{ github.workspace }}/build/ipa
